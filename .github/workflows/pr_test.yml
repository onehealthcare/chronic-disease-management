name: Test PR

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  run-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:4
        ports:
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_HOST: "%"
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          TZ: "Asia/Shanghai"
          MYSQL_PORT: "3306"
          MYSQL_USER: "user"
          MYSQL_PASSWORD: "pwd"
          MYSQL_DATABASE: "db"
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
    steps:
      - uses: actions/checkout@v2
      - run: |
          sed -i 's/ipython//g' requirements.txt
          sed -i 's/gunicorn==.*//g' requirements.txt
          sed -i 's/gevent==.*//g' requirements.txt
          sed -i 's/psutil==.*//g' requirements.txt
          cp config.sample.py config.py
      - name: init db
        env:
          MYSQL_USER: "user"
          MYSQL_PASSWORD: "pwd"
          MYSQL_DATABASE: "db"
        run: |
          # init ci hosts
          cat <<EOF | sudo tee -a /etc/hosts
          127.0.0.1 db_host
          EOF
          mysql -u $MYSQL_USER -p$MYSQL_PASSWORD -h db_host -e "DROP DATABASE IF EXISTS ${MYSQL_DATABASE};"
          mysql -u $MYSQL_USER -p$MYSQL_PASSWORD -h db_host -e "CREATE DATABASE ${MYSQL_DATABASE} CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;"
          mysql -u $MYSQL_USER -p$MYSQL_PASSWORD -h db_host $MYSQL_DATABASE <ci/tables.sql
      - run: |
          pip3 install pytest pytest-mock pytest-cov freezegun
          py.test --cache-clear -vv -s --cov=models --cov=utils --cov-report=xml tests/
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
